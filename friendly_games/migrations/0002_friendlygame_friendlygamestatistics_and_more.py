# Generated by Django 5.2 on 2025-06-03 16:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('friendly_games', '0001_initial'),
        ('teams', '0002_playerprofile'),
    ]

    operations = [
        migrations.CreateModel(
            name='FriendlyGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Friendly game name/description', max_length=100)),
                ('game_pin', models.CharField(help_text='Unique 6-digit PIN for this game', max_length=6, unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('READY', 'Ready to Play'), ('ACTIVE', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('target_score', models.PositiveIntegerField(default=13, help_text='Points needed to win')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('black_team_score', models.PositiveIntegerField(default=0)),
                ('white_team_score', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Friendly Game',
                'verbose_name_plural': 'Friendly Games',
            },
        ),
        migrations.CreateModel(
            name='FriendlyGameStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_games', models.PositiveIntegerField(default=0)),
                ('total_wins', models.PositiveIntegerField(default=0)),
                ('total_losses', models.PositiveIntegerField(default=0)),
                ('total_points', models.PositiveIntegerField(default=0)),
                ('pointer_games', models.PositiveIntegerField(default=0)),
                ('milieu_games', models.PositiveIntegerField(default=0)),
                ('tirer_games', models.PositiveIntegerField(default=0)),
                ('flex_games', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='friendly_stats', to='teams.player')),
            ],
            options={
                'verbose_name': 'Friendly Game Statistics',
                'verbose_name_plural': 'Friendly Game Statistics',
            },
        ),
        migrations.CreateModel(
            name='FriendlyGamePlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.CharField(choices=[('BLACK', 'Black Team'), ('WHITE', 'White Team')], max_length=10)),
                ('position', models.CharField(choices=[('POINTER', 'Pointer'), ('MILIEU', 'Milieu'), ('TIRER', 'Tirer'), ('FLEX', 'Flex')], max_length=10)),
                ('provided_codename', models.CharField(blank=True, help_text='Codename provided during game creation', max_length=6)),
                ('codename_verified', models.BooleanField(default=False, help_text="True if provided codename matches player's actual codename")),
                ('points_scored', models.PositiveIntegerField(default=0)),
                ('games_won', models.PositiveIntegerField(default=0)),
                ('games_lost', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='friendly_games.friendlygame')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.player')),
            ],
            options={
                'verbose_name': 'Friendly Game Player',
                'verbose_name_plural': 'Friendly Game Players',
                'unique_together': {('game', 'player')},
            },
        ),
    ]
