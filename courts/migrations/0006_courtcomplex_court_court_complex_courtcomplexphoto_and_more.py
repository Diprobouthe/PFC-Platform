# Generated by Django 5.2 on 2025-06-07 09:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('courts', '0005_court_location_description_court_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourtComplex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the court complex', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the complex')),
                ('distance_to_toilet', models.IntegerField(blank=True, help_text='Distance to nearest toilet in meters', null=True)),
                ('distance_to_water_hose', models.IntegerField(blank=True, help_text='Distance to water hose in meters', null=True)),
                ('has_shadow_daytime', models.BooleanField(default=False, help_text='Whether the complex has natural shade during daytime')),
                ('has_night_lighting', models.BooleanField(default=False, help_text='Whether the complex has lighting for night play')),
                ('public_accessibility', models.IntegerField(choices=[(1, '1 star'), (2, '2 stars'), (3, '3 stars'), (4, '4 stars'), (5, '5 stars')], default=3, help_text='Public accessibility rating (1-5 scale)')),
                ('google_maps_url', models.URLField(blank=True, help_text='Google Maps link')),
                ('public_hours', models.TextField(blank=True, help_text="Public access hours (e.g., 'Mon-Fri: 09:00-22:00')")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='court',
            name='court_complex',
            field=models.ForeignKey(blank=True, help_text='Optional court complex this court belongs to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courts', to='courts.courtcomplex'),
        ),
        migrations.CreateModel(
            name='CourtComplexPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Photo of the court complex', upload_to='court_complex_photos/')),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the photo', max_length=200)),
                ('is_cover', models.BooleanField(default=False, help_text='Whether this is the cover photo')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('court_complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='courts.courtcomplex')),
            ],
            options={
                'ordering': ['-is_cover', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CourtComplexRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(help_text="User's codename for privacy", max_length=50)),
                ('stars', models.FloatField(choices=[(0.5, '0.5 stars'), (1.0, '1.0 stars'), (1.5, '1.5 stars'), (2.0, '2.0 stars'), (2.5, '2.5 stars'), (3.0, '3.0 stars'), (3.5, '3.5 stars'), (4.0, '4.0 stars'), (4.5, '4.5 stars'), (5.0, '5.0 stars')], help_text='Rating from 0.5 to 5.0 stars')),
                ('comment', models.TextField(blank=True, help_text='Optional comment about the complex')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('court_complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='courts.courtcomplex')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('court_complex', 'codename')},
            },
        ),
    ]
